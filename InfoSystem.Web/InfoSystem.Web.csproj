<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>netcoreapp2.2</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.App" />
        <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
        <PackageReference Include="Newtonsoft.Json" Version="12.0.1" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="5.0.0-beta" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Compile Remove="Models\**" />
        <Content Remove="$(SpaRoot)**" />
        <Content Remove="Models\**" />
        <Content Include="ClientApp\dist\.nojekyll">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\200.html">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\authentication\index.html">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\favicon.ico">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\index.html">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\README.md">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\035f29dde0950ce29032.js">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\0f50a32aca085a3962be.js">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\4d9857078d0cca611771.js">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\6b7e56b74fac5e50bae6.js">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\7254c84210421065d640.js">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\9976f7b381e837f47d65.js">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\b0690f41f110c6280277.js">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\b46c6c3eabc3af3c8eeb.js">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\d6795f6d4168c60024f1.js">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\d7804759cd89ac0f31e1.js">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\e39596b6dd291daa359e.js">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\e87f4c96387603defd0a.js">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\e8ddb600c3209d22fb39.js">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\fonts\586090b.ttf">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\fonts\9219a80.woff">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\fonts\b661c28.eot">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\fonts\bca3a18.woff2">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\img\724c318.png">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\dist\_nuxt\LICENSES">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <EmbeddedResource Remove="Models\**" />
        <None Remove="$(SpaRoot)**" />
        <None Remove="Models\**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\InfoSystem.Core\InfoSystem.Core.csproj" />
      <ProjectReference Include="..\InfoSystem.Infrastructure\InfoSystem.Infrastructure.csproj" />
      <ProjectReference Include="..\InfoSystem.Sockets\InfoSystem.Sockets.csproj" />
    </ItemGroup>

    <ItemGroup>
        <Content Update="appconfig.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>
    
    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <!--Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        &lt;!&ndash; As part of publishing, ensure the JS resources are freshly built in production mode &ndash;&gt;
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run dev" />

        &lt;!&ndash; Include the newly-built files in the publish output &ndash;&gt;
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>-->

</Project>
